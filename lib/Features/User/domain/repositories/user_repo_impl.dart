import 'package:dartz/dartz.dart';import 'package:dio/dio.dart';import 'package:tasky/Core/Utils/Errors/failure.dart';import 'package:tasky/Features/User/data/models/user_model.dart';import '../../../../Core/Network/Local/cash_helper.dart';import '../../../../Core/Network/Local/local_string.dart';import '../../../../Core/Network/Remote/dio.dart';import '../../../../Core/Network/Remote/endpoints.dart';import '../../data/repositories/user_reo.dart';import '../entities/user_entities.dart';class UserRepoImpl implements UserRepo {  @override  Future<Either<Failure, UserEntity>> getData() async {    try {      final token = CashHelper.getData(key: LocalString.token);      var data =          await DioHelper.getData(path: AppEndPoint.profile, token: token);      return right(ProfileModel.fromJson(data.data));    } catch (e) {      if (e is DioException) {        if (e.response?.statusCode == 401) {          return left(ServerFailure.fromDioError(e));        } else {          return left(ServerFailure.fromDioError(e));        }      } else {        return left(ServerFailure.fromResponse(e.hashCode, e));      }    }  }}