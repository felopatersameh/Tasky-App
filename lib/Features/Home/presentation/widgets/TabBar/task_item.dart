import 'package:flutter/material.dart';import 'package:tasky/Core/Resources/styles.dart';import 'package:tasky/Core/Utils/Extensions/padding.dart';class TaskItem extends StatefulWidget {  final IconData icon;  final String title;  final String description;  final String status;  final String priority;  final String dueDate;  const TaskItem({    super.key,    required this.icon,    required this.title,    required this.description,    required this.status,    required this.priority,    required this.dueDate,  });  @override  _TaskItemState createState() => _TaskItemState();}class _TaskItemState extends State<TaskItem> {  void _toggleTapped() {  }  Color changeColorTextTitle() {    if (widget.status == 'waiting' || widget.priority == 'high') {      return const Color(0xffFF7D53);    } else if (widget.status == 'Inprogress' || widget.priority == 'medium') {      return const Color(0xff5F33E1);    } else {      return const Color(0xff0087FF);    }  }  Color changeColorTextPriority() {    if (widget.priority == 'high') {      return const Color(0xffFF7D53);    } else if (widget.priority == 'medium') {      return const Color(0xff5F33E1);    } else {      return const Color(0xff0087FF);    }  }  Color changeColorBackGround() {    if (widget.status == 'waiting') {      return const Color(0xffFFE4F2);    } else if (widget.status == 'Inprogress') {      return const Color(0xffF0ECFF);    } else {      return const Color(0xffE3F2FF);    }  }  @override  Widget build(BuildContext context) {    return GestureDetector(      onTap: _toggleTapped,      child: AnimatedContainer(        duration: const Duration(milliseconds: 300),        curve: Curves.easeInOut,        padding: const EdgeInsets.all(10),        child: ListTile(          leading: Icon(widget.icon),          title: Row(            mainAxisAlignment: MainAxisAlignment.spaceBetween,            children: [              Expanded(                child: Text(                  widget.title,                  maxLines: 1,                  style: getItemTitle(),                ),              ),              Container(                  padding:                      const EdgeInsets.symmetric(vertical: 2, horizontal: 6),                  color: changeColorBackGround(),                  child: Text(                    widget.status,                    style:                        getSmallText1().copyWith(color: changeColorTextTitle()),                  )),            ],          ).paddingSH(15),          subtitle: Column(            crossAxisAlignment: CrossAxisAlignment.start,            children: [              Text(                widget.description,                style: getItemDesc(),              ),              Row(                mainAxisAlignment: MainAxisAlignment.spaceBetween,                children: [                  Row(                    children: [                      Icon(                        Icons.outlined_flag_outlined,                        color: changeColorTextPriority(),                      ),                      Text(widget.priority,                          style: getItemPriority()                              .copyWith(color: changeColorTextPriority())),                    ],                  ),                  Text(                    widget.dueDate,                    style: getItemDue(),                  ),                ],              ),            ],          ).paddingSH(15),          trailing: const Icon(Icons.more_vert_outlined),        ),      ),    );  }}