import 'package:dartz/dartz.dart';import 'package:dio/dio.dart';import '../../../../Core/Network/Local/cachehelper.dart';import '../../../../Core/Network/Remote/dio.dart';import '../../../../Core/Network/Remote/endpoints.dart';import '../../../../Core/Utils/Errors/failure.dart';import '../../data/remote/models/LoginModel.dart';import '../../data/repositories/repo_login.dart';class LoginRepoImpl implements LoginRepo {  @override  Future<Either<Failure, LoginModel>> fetchLogin({    required String phone,    required String password,  }) async {    try {      var data = await DioHelper.postData(path: AppEndPoint.login, data: {        "phone": phone,        "password": password,      });      if (data.statusCode != null && data.statusCode! < 300) {        CashHelper.saveData(key: 'Token', value: data.data["access_token"]);      }      return right(LoginModel.fromJson(data.data));    } catch (e) {      if (e is DioException) {        return left(ServerFailure.fromDioError(e));      } else {        return left(ServerFailure.fromResponse(e.hashCode, e));      }    }  }}