import 'package:bloc/bloc.dart';import 'package:flutter_bloc/flutter_bloc.dart';import 'package:meta/meta.dart';import 'package:tasky/Features/QR/data/repositories/qr_repo.dart';import '../../../Home/data/models/task_model.dart';part 'qr_state.dart';class QrCubit extends Cubit<QrState> {  QrCubit(this.qrRepo) : super(QrInitial());  final QrRepo qrRepo;  static QrCubit get(context) => BlocProvider.of(context);  Future<void> getOneTask(String id) async {    emit(GetOneTaskLoading());    await qrRepo.getOne(id: id).then((value) {      value.fold((failure) {        emit(GetOneTaskFailed(error: failure.errMessage));      }, (task) => emit(GetOneTaskSuccess(model: task)));    });  }}