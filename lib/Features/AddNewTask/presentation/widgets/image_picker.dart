import 'package:flutter/material.dart';import 'package:image_picker/image_picker.dart';import 'package:tasky/Core/Resources/colors.dart';import 'dart:io';import 'package:dotted_border/dotted_border.dart';import 'package:tasky/Core/Utils/Extensions/padding.dart';import 'package:tasky/Core/Utils/Extensions/size_box.dart';import 'package:tasky/Features/AddNewTask/presentation/manager/new_task_cubit.dart';class ImagePickerWidget extends StatefulWidget {  const ImagePickerWidget({super.key});  @override  State<ImagePickerWidget> createState() => _ImagePickerWidgetState();}class _ImagePickerWidgetState extends State<ImagePickerWidget> {  File? _image;  Future<void> _pickImage() async {    final imagePicker = ImagePicker();    final pickedFile = await imagePicker.pickImage(source: ImageSource.gallery);    if (pickedFile != null) {      setState(() {        _image = File(pickedFile.path);        NewTaskCubit.get(context).uploadImage(image:_image!);      });    }  }  @override  Widget build(BuildContext context) {    return Row(      mainAxisAlignment: MainAxisAlignment.center,      children: [        Center(          child: Column(            mainAxisAlignment: MainAxisAlignment.center,            children: [              _image == null                  ? InkWell(onTap: _pickImage, child: const PlaceholderWidget())                  : InkWell(                onTap: _pickImage,                child: Image.file(                  _image!,                  width: 200.0,                  height: 200.0,                ),              ),            ],          ),        ),      ],    ).paddingAll(16);  }}class PlaceholderWidget extends StatelessWidget {  const PlaceholderWidget({super.key});  @override  Widget build(BuildContext context) {    return DottedBorder(      color: AppColors.colorPrimary,      strokeWidth: 2,      borderType: BorderType.RRect,      radius: const Radius.circular(8),      dashPattern: const [6, 3],      child: SizedBox(        width: MediaQuery            .of(context)            .size            .width * .8,        height: MediaQuery            .of(context)            .size            .height * .08,        child: Center(          child: Row(            mainAxisAlignment: MainAxisAlignment.center,            children: [              const Icon(Icons.add_photo_alternate_outlined,                  size: 50.0, color: AppColors.colorPrimary),              10.sW,              const Text(                'Add Img',                style: TextStyle(color: AppColors.colorPrimary, fontSize: 16.0),              ),            ],          ),        ),      ),    );  }}