import 'package:flutter_bloc/flutter_bloc.dart';import 'package:tasky/Features/Home/presentation/manager/home_cubit.dart';import 'package:tasky/Features/TaskDetails/data/repositories/task_repo.dart';import '../../../../Config/Route/next_screen.dart';part 'task_state.dart';class TaskCubit extends Cubit<TaskState> {  TaskCubit(this.taskRepo) : super(TaskInitial());  final TaskRepo taskRepo;  static TaskCubit get(context) => BlocProvider.of(context);  Future<void> removeTask(context, String id) async {    emit(TaskLoading());    await taskRepo.removeTask(id: id).then((value) {      value.fold((failure) => emit(TaskFailed(error: failure.errMessage)),          (user) {        popScreen(context);        HomeCubit.get(context).getListTasks();        emit(TaskSuccess(model: user));      });    });  }}