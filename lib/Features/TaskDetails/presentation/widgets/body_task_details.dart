import 'package:flutter/material.dart';import 'package:tasky/Core/Resources/string.dart';import 'package:tasky/Core/Utils/Extensions/format.dart';import 'package:tasky/Core/Utils/Extensions/padding.dart';import 'package:tasky/Core/Utils/Extensions/size_box.dart';import 'package:tasky/Features/AddNewTask/presentation/manager/new_task_cubit.dart';import '../../../../Core/Resources/colors.dart';import '../../../../Core/Resources/list.dart';import '../../../../Core/Resources/styles.dart';import '../../../../Core/Utils/Widget/Images/build_image_cash.dart';import '../../../../Core/Utils/Widget/qr_build.dart';import '../pages/tass_details_screen.dart';import 'drop_down_button_form_field.dart';class BodyTaskDetails extends StatelessWidget {  const BodyTaskDetails({    super.key,    required this.widget,  });  final TaskDetailsScreen widget;  @override  Widget build(BuildContext context) {    return SingleChildScrollView(        child: Column(      crossAxisAlignment: CrossAxisAlignment.start,      children: [        Center(child: BuildImageCash(urlImage: widget.item.image!)),        8.sH,        Text(widget.item.title!, style: getBigText(),maxLines:widget.item.title!.length),        8.sH,        Text(widget.item.desc!, style: getMediumText(),maxLines:widget.item.desc!.length,),        16.sH,        _dateView(),        16.sH,        DropdownButtonFormFieldTasks(          absorbing: true,          status: widget.item.status!,          label: AppStrings.status,          items: AppList.itemsStatus(),          onChanged: (value) {},        ),        16.sH,        DropdownButtonFormFieldTasks(          absorbing: true,          onChanged: (value) {          },          status: widget.item.priority!,          label: AppStrings.priority,          items: AppList.itemsPriority(),        ),        16.sH,        QrBuilding(item: widget.item.id!)      ],    ).paddingAll(16));  }  Container _dateView() {    return Container(      padding: const EdgeInsets.symmetric(horizontal: 6, vertical: 10),      color: AppColors.colorSecond,      child: Row(        mainAxisAlignment: MainAxisAlignment.spaceBetween,        children: [          Column(            crossAxisAlignment: CrossAxisAlignment.start,            children: [              if (hasPassed == true) Text('End Date', style: getSmallText1()),              Text(                widget.item.createdAt!.formatDate,                style: getItemTitle().copyWith(color: AppColors.colorPrimary),              ),            ],          ),          const Icon(Icons.calendar_today, color: AppColors.colorPrimary),        ],      ),    );  }}