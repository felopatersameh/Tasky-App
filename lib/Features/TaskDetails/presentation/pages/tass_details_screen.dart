import 'package:flutter/material.dart';import 'package:flutter_bloc/flutter_bloc.dart';import 'package:tasky/Features/Home/data/models/task_model.dart';import 'package:tasky/Features/TaskDetails/presentation/manager/task_cubit.dart';import '../widgets/body_task_details.dart';import '../widgets/custom_app_bar_task_details.dart';class TaskDetailsScreen extends StatefulWidget {  final TaskModel item;  const TaskDetailsScreen({super.key, required this.item});  @override  State<TaskDetailsScreen> createState() => _TaskDetailsScreenState();}late DateTime dateTime;late bool hasPassed;class _TaskDetailsScreenState extends State<TaskDetailsScreen> {  @override  void initState() {    //!removed    DateTime now = DateTime.now();    dateTime = DateTime.parse(widget.item.createdAt!);    hasPassed = dateTime.isBefore(now);    super.initState();  }  @override  Widget build(BuildContext context) {    return BlocBuilder<TaskCubit, TaskState>(      builder: (context, state) {        return _buildScaffold();      },    );  }  Scaffold _buildScaffold() => Scaffold(        appBar: customAppBarTaskDetails(widget.item.id!),        body: BodyTaskDetails(widget: widget),      );}