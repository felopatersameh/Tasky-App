import 'package:flutter/material.dart';import 'package:tasky/Config/asset.dart';import 'package:tasky/Core/Utils/Widget/build_image.dart';import '../../Config/Route/route_app.dart';import '../../Core/Network/Local/cachehelper.dart';import '../../Core/Resources/colors.dart';class SplashScreen extends StatefulWidget {  const SplashScreen({super.key});  @override  State<SplashScreen> createState() => _SplashScreenState();}class _SplashScreenState extends State<SplashScreen>    with SingleTickerProviderStateMixin {  late AnimationController _controller;  late Animation<double> _fadeAnimation;  @override  void initState() {    super.initState();    _controller = AnimationController(      duration: const Duration(seconds: 2),      vsync: this,    );    _fadeAnimation = Tween<double>(begin: 0, end: 1).animate(      CurvedAnimation(        parent: _controller,        curve: Curves.easeIn,      ),    );    _controller.forward();    Future.delayed(const Duration(seconds: 2), () {      Navigator.pushReplacementNamed(context, start());    });  }  String start() {    final startKey = CashHelper.getData(key: 'StartKey') ?? false;    final token = CashHelper.getData(key: 'Token');    if (startKey is bool && startKey) {      if (token != null && token is String && token.isNotEmpty) {        return Routes.routeHome;      } else {        return Routes.routeLogin;      }    } else {      return Routes.routeInStart;    }  }  @override  void dispose() {    _controller.dispose();    super.dispose();  }  @override  Widget build(BuildContext context) {    return Scaffold(      backgroundColor: AppColors.colorPrimary,      body: AnimatedBuilder(        animation: _controller,        builder: (context, child) => Center(          child: FadeTransition(            opacity: _fadeAnimation,            child: const BuildImageAssets(              url: AppAssets.appLogo,              typeSVg: true,            ),          ),        ),      ),    );  }}