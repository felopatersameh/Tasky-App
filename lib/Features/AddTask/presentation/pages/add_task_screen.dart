import 'package:flutter/material.dart';import 'package:flutter_bloc/flutter_bloc.dart';import 'package:tasky/Core/Resources/string.dart';import 'package:tasky/Core/Utils/Widget/custom_app_bar.dart';import 'package:tasky/Core/Utils/Widget/custom_scaffold_messenger.dart';import 'package:tasky/Features/AddNewTask/presentation/manager/new_task_cubit.dart';import '../widgets/form_add_new.dart';class NewTaskScreen extends StatefulWidget {  const NewTaskScreen({super.key});  @override   State<NewTaskScreen> createState() => _NewTaskScreenState();}class _NewTaskScreenState extends State<NewTaskScreen>    with SingleTickerProviderStateMixin {  late AnimationController _controller;  late Animation<Offset> _offsetAnimation;  @override  void initState() {    super.initState();    _controller = AnimationController(      duration: const Duration(milliseconds: 500),      vsync: this,    )..forward();    _offsetAnimation = Tween<Offset>(      begin: const Offset(0.0, 1.0),      end: Offset.zero,    ).animate(CurvedAnimation(      parent: _controller,      curve: Curves.easeOut,    ));  }  @override  void dispose() {    _controller.dispose();    super.dispose();  }  @override  Widget build(BuildContext context) {    return BlocConsumer<NewTaskCubit, NewTaskState>(      listener: (context, state) {        if (state is UploadImageSuccess) {          showSnackBar(context, AppStrings.uploadImageMessage);        } else if (state is CreateTaskSuccess) {          showSnackBar(context, AppStrings.successCreatedMessage);        }      },      builder: (context, state) {        return Scaffold(          appBar: buildCustomAppBar(title: 'New Task'),          body: SafeArea(            child: SlideTransition(              position: _offsetAnimation,              child: const SingleChildScrollView(child: FormAddTask()),            ),          ),        );      },    );  }}