import 'package:flutter/material.dart';import 'package:tasky/Core/Utils/Extensions/padding.dart';import 'package:tasky/Core/Utils/Extensions/size_box.dart';import '../../../../Core/Resources/list.dart';import '../../../../Core/Resources/string.dart';import '../../../../Core/Resources/styles.dart';import '../../../../Core/Resources/validate.dart';import '../../../../Core/Utils/Widget/TextField/build_text_field.dart';import '../../../../Core/Utils/Widget/build_button.dart';import '../../../TaskDetails/presentation/widgets/drop_down_button_form_field.dart';import '../manager/add_task_cubit.dart';import 'data_picker.dart';import 'image_picker.dart';class FormAddTask extends StatefulWidget {  const FormAddTask({super.key});  @override  State<FormAddTask> createState() => _FormAddTaskState();}class _FormAddTaskState extends State<FormAddTask> {  final key = GlobalKey<FormState>();  final TextEditingController controllerTitle = TextEditingController();  final TextEditingController controllerDescription = TextEditingController();  @override  void initState() {    AddTaskCubit.get(context).priority = null;    super.initState();  }  @override  Widget build(BuildContext context) {    return Form(        key: key,        child: Column(          crossAxisAlignment: CrossAxisAlignment.start,          children: [            20.sH,            const ImagePickerWidget(),            Text(              AppStrings.title,              style: getSmallText2(),            ).paddingSH(15),            DefaultTextFormField(              inputValidator: (p0) => defaultValidate(                  text: p0.toString(), validate: AppStrings.otherValidate),              controller: controllerTitle,              text: AppStrings.hintTitle,              type: TextInputType.text,            ),            Text(              AppStrings.description,              style: getSmallText2(),            ).paddingSH(15),            DefaultTextFormField(              inputValidator: (p0) => defaultValidate(                  text: p0.toString(), validate: AppStrings.otherValidate),              controller: controllerDescription,              text: AppStrings.hintDescription,              type: TextInputType.text,              maxLine: 8,            ),            Text(              AppStrings.priority,              style: getSmallText2(),            ).paddingSH(15),            DropdownButtonFormFieldTasks(              status: AppStrings.lowV,              items: AppList.itemsPriority(),              onChanged: (value) {                AddTaskCubit.get(context).priority = value;              },            ).paddingSH(15),            Text(              AppStrings.dueDate,              style: getSmallText2(),            ).paddingSH(15).paddingSV(15),            const DatePickerTextField(),            Center(              child: DefaultButton(                press: () {                  if (key.currentState!.validate()) {                    AddTaskCubit.get(context).createTask(context,                        title: controllerTitle.text,                        desc: controllerDescription.text);                  }                },                text: AppStrings.addTask,                condition: true,                width: MediaQuery.of(context).size.width * .8,              ),            )          ],        ));  }}